@import '../../styles/base';
@import '../../styles/mixins';

.dashboard {
  min-height: 100vh;
  background: color(bg-primary);
  display: flex;
}

.sidebar {
  width: 80px;
  background: color(bg-secondary);
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: spacing(6) 0;
  gap: spacing(6);
  border-right: 1px solid color(border-primary);
}

.sidebarIcon {
  @include neu-icon(medium);
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all map-get($transitions, base) $transition-easing;

  &.active {
    background: color(primary);
    
    svg {
      color: white;
    }
  }

  svg {
    color: color(text-secondary);
    transition: color map-get($transitions, base) $transition-easing;
  }

  &:hover {
    svg {
      color: color(text-primary);
    }
  }
}

.mainContent {
  flex: 1;
  padding: spacing(8);
  overflow-y: auto;
  @include custom-scrollbar();
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: spacing(8);

  @include responsive(sm) {
    flex-direction: column;
    align-items: flex-start;
    gap: spacing(4);
  }
}

.headerLeft {
  display: flex;
  align-items: center;
  gap: spacing(4);
}

.title {
  font-size: font-size(3xl);
  font-weight: font-weight(bold);
  color: color(text-primary);

  .primaryText {
    color: color(primary);
  }
}

.badge {
  @include neu-icon(light);
  padding: spacing(1) spacing(3);
  background: color(error);
  color: white;
  font-size: font-size(sm);
  font-weight: font-weight(bold);
  border-radius: map-get($border-radius, full);
  min-width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.markAllButton {
  @include neu-button(medium);
  padding: spacing(2) spacing(4);
  font-size: font-size(sm);
}

// Error/Success Cards
.errorCard {
  @include neu-card(medium);
  background: rgba(239, 68, 68, 0.2);
  border: 1px solid rgba(239, 68, 68, 0.5);
  margin-bottom: spacing(4);
  padding: spacing(4);
}

.errorText {
  color: color(error);
}

.successCard {
  @include neu-card(medium);
  background: rgba(16, 185, 129, 0.2);
  border: 1px solid rgba(16, 185, 129, 0.5);
  margin-bottom: spacing(4);
  padding: spacing(4);
}

.successText {
  color: color(success);
}

// Preferences Card
.preferencesCard {
  @include neu-card(medium);
  margin-bottom: spacing(6);
  padding: spacing(6);

  @include responsive(sm) {
    padding: spacing(4);
  }
}

.cardHeader {
  display: flex;
  align-items: center;
  gap: spacing(4);
  margin-bottom: spacing(6);

  svg {
    color: color(primary);
  }
}

.cardTitle {
  font-size: font-size(2xl);
  font-weight: font-weight(bold);
  color: color(text-primary);
}

.preferencesList {
  display: flex;
  flex-direction: column;
  gap: spacing(4);
  margin-bottom: spacing(6);
}

.preferenceItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: spacing(4);
  @include neu-card(light);
  border-radius: map-get($border-radius, base);

  @include responsive(sm) {
    flex-direction: column;
    align-items: flex-start;
    gap: spacing(3);
  }
}

.preferenceInfo {
  flex: 1;
}

.preferenceLabel {
  font-size: font-size(lg);
  font-weight: font-weight(semi);
  color: color(text-primary);
  margin-bottom: spacing(1);
  display: flex;
  align-items: center;
  gap: spacing(2);

  svg {
    color: color(primary);
  }
}

.preferenceDescription {
  font-size: font-size(sm);
  color: color(text-secondary);
}

// Toggle Switch
.toggle {
  position: relative;
  display: inline-block;
  width: 52px;
  height: 28px;
  cursor: pointer;

  input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  input:disabled + .toggleSlider {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.toggleSlider {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: color(bg-tertiary);
  border-radius: map-get($border-radius, full);
  transition: all map-get($transitions, base) $transition-easing;
  @include neu-inset(light);

  &::before {
    content: '';
    position: absolute;
    height: 20px;
    width: 20px;
    left: 4px;
    bottom: 4px;
    background: color(surface);
    border-radius: 50%;
    transition: all map-get($transitions, base) $transition-easing;
    box-shadow: 
      2px 2px 4px color(shadow-dark),
      -2px -2px 4px color(shadow-light);
  }
}

.toggle input:checked + .toggleSlider {
  background: color(primary);
  box-shadow: 
    inset 4px 4px 8px rgba(139, 92, 246, 0.5),
    inset -4px -4px 8px rgba(255, 255, 255, 0.1);

  &::before {
    transform: translateX(24px);
    background: white;
  }
}

// Save Button
.saveButton {
  @include neu-button-primary(medium);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: spacing(2);
  padding: spacing(4) spacing(6);
  width: 100%;
  margin-top: spacing(4);

  svg {
    flex-shrink: 0;
  }
}

.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Notifications Card
.notificationsCard {
  @include neu-card(medium);
  padding: spacing(6);

  @include responsive(sm) {
    padding: spacing(4);
  }
}

.notificationsList {
  display: flex;
  flex-direction: column;
  gap: spacing(2);
}

.notificationItem {
  @include neu-card(light);
  padding: spacing(4);
  border-radius: map-get($border-radius, base);
  display: flex;
  gap: spacing(4);
  cursor: pointer;
  transition: all map-get($transitions, base) $transition-easing;
  border-left: 3px solid transparent;

  &:hover {
    transform: translateX(4px);
    border-left-color: color(primary);
  }

  &.unread {
    background: rgba(139, 92, 246, 0.1);
    border-left-color: color(primary);
  }
}

.notificationIcon {
  @include neu-icon(light);
  width: 40px;
  height: 40px;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;

  svg {
    color: color(primary);
  }
}

.notificationContent {
  flex: 1;
}

.notificationHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: spacing(1);
}

.notificationTitle {
  font-size: font-size(lg);
  font-weight: font-weight(semi);
  color: color(text-primary);
}

.unreadDot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: color(primary);
  flex-shrink: 0;
}

.notificationMessage {
  font-size: font-size(sm);
  color: color(text-secondary);
  margin-bottom: spacing(2);
  line-height: 1.5;
}

.notificationTime {
  font-size: font-size(xs);
  color: color(text-muted);
  display: flex;
  align-items: center;
  gap: spacing(1);
}

// Empty State
.emptyState {
  text-align: center;
  padding: spacing(12);
  color: color(text-secondary);
}

.emptyStateText {
  font-size: font-size(lg);
  color: color(text-muted);
}

// Loading States
.loadingContainer {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background: color(bg-primary);
}

.loadingSpinner {
  @include neu-icon(medium);
  width: 128px;
  height: 128px;
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    color: color(primary);
    animation: spin 1s linear infinite;
  }
}

